!function([t]){const s={r(){},d(t,s,n){t[s]=n}},n={};t.call(n,null,n,s);for(const t in n)n[t]=n[t]()}([function(t,s,n){"use strict";n.r(s);const i=11;function e(t,s){const{firstChild:n,lastChild:e}=function(t){return t.nodeType===i?t:{firstChild:t,lastChild:t}}(s);(n.lemnRef=t.i=n.lemnRef||t.i).t=n,(e.lemnEndRef=t.s=e.lemnEndRef||t.s).t=e}function o(t){const s=document.createRange();return s.setStartBefore(t.i.t),s.setEndAfter(t.s.t),s.extractContents(),s}function c(t,s){const n=o(t);e(t,s),n.insertNode(s)}function r({h:{t,o:s}},n){t.removeAttribute(s),Array.isArray(n)?t[s]=n.join(" "):"object"==typeof n?Object.assign(t[s],n):t[s]=n}function h(t){return t.some(Array.isArray)?h([].concat(...t)):t}const u="lemn";function d(t,...s){const n=[t[0],...h(s.map((s,n)=>[s,t[n+1]]))],i=n.map((t,s)=>"object"==typeof t||"function"==typeof t?`<link class=${u}${s}>`:t).join("")||" ",e=document.createRange().createContextualFragment(i);return n.forEach((t,s)=>{if("object"==typeof t||"function"==typeof t){const n=e.querySelector(`.${u}${s}`);n?t.nodeType?c({i:{t:n},s:{t:n}},t):(t.lemnRef={...t.lemnRef,i:{t:n},s:{t:n}},e.l=[...e.l||[],t]):Array.from(e.querySelectorAll("*")).some(n=>Array.from(n.attributes).some(i=>{if(i.value===`<link class=${u}${s}>`){const s="class"===i.name?"className":i.name;return t.render?(t.lemnRef={h:{t:n,o:s}},e.l=[...e.l||[],t]):r({h:{t:n,o:s}},t),!0}}))}}),e}function l(t,s){t&&t.call(s)}function a(t){l(t.willDetach,t)}function f(t){l(t.didAttach,t)}function m(t){if(l(t.willRender,t),t.lemnRef.h)r(t.lemnRef,t.render()||"");else{const n=(s=t.render()||" ").nodeType?s:d`${s}`;n.lemnRef||((t.lemnRef.l||[]).forEach(t=>!(n.l||[]).includes(t)&&a(t)),(n.l||[]).forEach(t=>m(t)),(n.l||[]).forEach(s=>!(t.lemnRef.l||[]).includes(s)&&f(s)),t.lemnRef.l=n.l||[],c(t.lemnRef,n),n.lemnRef=t.lemnRef)}var s;l(t.didRender,t)}class ${constructor(t,s){this.parent=t,this.u=s,this.data=this.u(this.parent.data,this.data)}unbind(t){0===(this.m=(this.m||[]).filter(s=>s!==t)).length&&this.parent.unbind(this)}bind(t){1===(this.m=[...this.m||[],t]).length&&(this.parent.bind(this),this.data=this.u(this.parent.data,this.data))}push(){var t;this.data!==(this.data=this.u(this.parent.data,this.data))&&((this.m||[]).forEach(t=>t.push()),this.lemnRef&&(t=this,Promise.resolve(t).then(m)))}as(t){return new $(this,t)}willDetach(){this.parent.unbind(this)}didAttach(){this.parent.bind(this)}render(){return this.data}}class p extends ${constructor(t={}){super({bind(){},unbind(){},data:t},t=>t)}set(t){this.parent.data=t,this.push()}toJSON(){return this.data}}const b=new class{constructor(t={}){Object.entries(t).forEach(t=>this.set(...t))}model(t){return(this.v=this.v||{})[t]=this.v[t]||new p}get(t){return((this.v=this.v||{})[t]=this.v[t]||new p).data}set(t,s){((this.v=this.v||{})[t]=this.v[t]||new p).set(s)}remove(t){delete this.v[t]}toJSON(){return this.v}}({"todos/index":[]});class y{constructor(t){this.id=t,this.model=b.model(t)}render(){const{model:t}=this;return d`<div>
    <input type="checkbox"
      checked="${t.as(({complete:t})=>t)}"
      onchange="${s=>t.set({...t.data,complete:!t.data.complete})}">
      ${t.data.description}
    </div>`}}class w{constructor(t){this.id=t,this.index=b.model(t)}render(){return d`${this.index.as(t=>t.map(t=>new y(t)))}`}}class v{constructor(t={name:"name",model:new p("")}){this.options=t}render(){const{name:t,model:s}=this.options;return d`<input type="text"
      name="${t}"
      value="${s.as(t=>t)}"
      onkeyup="${t=>s.set(t.currentTarget.value)}">`}}class x{constructor(){this.nextId=0,this.submit=this.submit.bind(this),this.descriptionModel=new p("")}submit(t){const s=this.nextId++;return b.set(`todos/${s}`,{complete:!1,description:this.descriptionModel.data}),this.descriptionModel.set(""),b.set("todos/index",[...b.get("todos/index")||[],`todos/${s}`]),t.preventDefault(),!1}render(){return d`<form onsubmit="${this.submit}">
      ${new v({name:"description",model:this.descriptionModel})}
      <input type="button" value="add" onclick="${this.submit}">
    </form>`}}!function(t,s){t.appendChild(d`${s}`),m(s),f(s)}(document.querySelector(".root"),new class{render(){const t=b.model("todos/index");return d`
      <input type="button" value="clear complete" onclick="${()=>t.set(t.data.filter(t=>!b.get(t).complete))}">
      ${new x}
      ${new w("todos/index")}
    `}})}]);
//# sourceMappingURL=todo.js.map