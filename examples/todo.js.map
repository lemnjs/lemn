{"version":3,"sources":["webpack:///cheap bootstrap","webpack:///../src/tag.js","webpack:///../src/lifecycle.js","webpack:///../src/bond.js","webpack:///../src/model.js","webpack:///./todo.js","webpack:///../src/store.js"],"names":["__webpack_require__","[object Object]","exports","name","getter","factory","call","key","DOCUMENT_FRAGMENT_NODE","setRefRange","refRange","replaceWith","firstChild","lastChild","nodeType","lemnRef","lemnPrivateStart","lemnPrivateDom","lemnEndRef","lemnPrivateEnd","removeRef","range","document","createRange","setStartBefore","setEndAfter","extractContents","replace","insertNode","replaceAttr","h","o","lemnPrivateName","removeAttribute","Array","isArray","join","Object","assign","flatten","array","some","concat","BIND_PREFIX","strings","_exprs","exprs","map","expr","i","out","fragment","createContextualFragment","forEach","toReplace","querySelector","t","s","lemnPrivateComponents","from","querySelectorAll","el","attributes","attr","value","attrName","render","maybeCall","fn","_this","willDetach","didAttach","performRender","willRender","lemnPrivateAttr","v","includes","component","didRender","Bond","parent","this","lemnPrivateFn","data","child","lemnPrivateActiveChildren","filter","c","length","unbind","bind","push","Promise","resolve","then","Model","super","n","store","lemnData","entries","args","set","id","lemnPrivateData","todos/index","todo_ToDoItem","model","as","complete","ev","description","todo_ToDoSet","index","ids","todo_TextInput","options","P","currentTarget","todo_ToDoForm","nextId","submit","descriptionModel","get","preventDefault","root","appendChild","f","todosIndex"],"mappings":"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","file":"todo.js","sourcesContent":["const __webpack_require__ = {r () {}, d (exports, name, getter) {exports[name] = getter;}};\nconst exports = {};\nfactory.call(exports, null, exports, __webpack_require__);\nfor (const key in exports) {exports[key] = exports[key]();}\nreturn exports;","const DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction startEndNodes (replaceWith) {\n  if (replaceWith.nodeType === DOCUMENT_FRAGMENT_NODE) {\n    return replaceWith;\n  }\n  return {firstChild: replaceWith, lastChild: replaceWith};\n}\n\nfunction setRefRange (refRange, replaceWith) {\n  const {firstChild, lastChild} = startEndNodes(replaceWith);\n\n  (firstChild.lemnRef = (refRange.lemnPrivateStart = (firstChild.lemnRef || refRange.lemnPrivateStart))).lemnPrivateDom = firstChild;\n  (lastChild.lemnEndRef = (refRange.lemnPrivateEnd = (lastChild.lemnEndRef || refRange.lemnPrivateEnd))).lemnPrivateDom = lastChild;\n}\n\nfunction removeRef (refRange) {\n  const range = document.createRange();\n  range.setStartBefore(refRange.lemnPrivateStart.lemnPrivateDom);\n  range.setEndAfter(refRange.lemnPrivateEnd.lemnPrivateDom);\n  range.extractContents();\n  return range;\n}\n\nfunction replace (refRange, replaceWith) {\n  const range = removeRef(refRange);\n  setRefRange(refRange, replaceWith);\n  range.insertNode(replaceWith);\n}\n\n/**\n * @private\n * @param {object|function|string|number|boolean} replaceWith\n */\nfunction replaceAttr ({lemnPrivateAttr: {lemnPrivateDom, lemnPrivateName}}, replaceWith) {\n  lemnPrivateDom.removeAttribute(lemnPrivateName);\n  if (Array.isArray(replaceWith)) {\n    lemnPrivateDom[lemnPrivateName] = replaceWith.join(' ');\n  } else if (typeof replaceWith === 'object') {\n    Object.assign(lemnPrivateDom[lemnPrivateName], replaceWith);\n  } else {\n    lemnPrivateDom[lemnPrivateName] = replaceWith;\n  }\n}\n\nfunction flatten (array) {\n  if (array.some(Array.isArray)) {\n    return flatten([].concat(...array));\n  }\n  return array;\n}\n\nconst BIND_PREFIX = 'lemn';\n\n/**\n * A template string tag that turns the strings and input objects into lemnPrivateDom\n * elements.\n *\n * @param {Array.<string>} strings\n * @param {Array} ...exprs\n *\n * @example\n * h`<div></div>`\n *\n * @example\n * h`<div style=\"${{fontSize: '2em'}}\">Big Text</div>`\n *\n * @example\n * h`<div onclick=\"${ev => console.log('clicked!')}\">Click Me</div>`\n *\n * @example\n * h`<div>${{render() {return h`output`;}}}</div>`\n *\n * @example\n * h`<div>${new MyComponent()}</div>`\n */\nfunction h (strings, ..._exprs) {\n  const exprs = [strings[0], ...flatten(_exprs.map((expr, i) => [expr, strings[i + 1]]))];\n\n  const out = exprs.map((expr, i) => (\n    (typeof expr === 'object' || typeof expr === 'function') ?\n      `<link class=${BIND_PREFIX}${i}>` :\n      expr\n  )).join('') || ' ';\n\n  const fragment = document.createRange().createContextualFragment(out);\n\n  exprs.forEach((expr, i) => {\n    if (typeof expr === 'object' || typeof expr === 'function') {\n      const toReplace = fragment.querySelector(`.${BIND_PREFIX}${i}`);\n      if (toReplace) {\n        if (!expr.nodeType) {\n          expr.lemnRef = {...expr.lemnRef, lemnPrivateStart: {lemnPrivateDom: toReplace}, lemnPrivateEnd: {lemnPrivateDom: toReplace}};\n          fragment.lemnPrivateComponents = [...(fragment.lemnPrivateComponents || []), expr];\n        } else {\n          replace({lemnPrivateStart: {lemnPrivateDom: toReplace}, lemnPrivateEnd: {lemnPrivateDom: toReplace}}, expr);\n        }\n      } else {\n        Array.from(fragment.querySelectorAll('*')).some(el => {\n          return Array.from(el.attributes).some(attr => {\n            if (attr.value === `<link class=${BIND_PREFIX}${i}>`) {\n              const attrName = attr.name === 'class' ? 'className' : attr.name;\n              if (expr.render) {\n                expr.lemnRef = {lemnPrivateAttr: {lemnPrivateDom: el, lemnPrivateName: attrName}};\n                fragment.lemnPrivateComponents = [...(fragment.lemnPrivateComponents || []), expr];\n              } else {\n                replaceAttr({lemnPrivateAttr: {lemnPrivateDom: el, lemnPrivateName: attrName}}, expr);\n              }\n              return true;\n            }\n          });\n        });\n      }\n    }\n  });\n\n  return fragment;\n}\n\nexport {\n  setRefRange,\n  removeRef,\n  replace,\n  replaceAttr,\n  flatten,\n  h,\n  BIND_PREFIX,\n};\n","import {removeRef, replace, replaceAttr, h} from './tag';\n\nfunction toFragment (replaceWith) {\n    if (replaceWith.nodeType) {\n        return replaceWith;\n    }\n    return h`${replaceWith}`;\n}\n\nfunction maybeCall (fn, _this) {\n    fn && fn.call(_this);\n}\n\nfunction willDetach (expr) {\n    maybeCall(expr.willDetach, expr);\n}\n\nfunction didAttach (expr) {\n    maybeCall(expr.didAttach, expr);\n}\n\nfunction performRender (expr) {\n    maybeCall(expr.willRender, expr);\n\n    if (expr.lemnRef.lemnPrivateAttr) {\n      replaceAttr(expr.lemnRef, expr.render() || '');\n    } else {\n      const fragment = toFragment(expr.render() || ' ');\n      if (!fragment.lemnRef) {\n        (expr.lemnRef.lemnPrivateComponents || []).forEach(v => !(fragment.lemnPrivateComponents || []).includes(v) && willDetach(v));\n        (fragment.lemnPrivateComponents || []).forEach(component => performRender(component));\n        (fragment.lemnPrivateComponents || []).forEach(v => !(expr.lemnRef.lemnPrivateComponents || []).includes(v) && didAttach(v));\n        expr.lemnRef.lemnPrivateComponents = (fragment.lemnPrivateComponents || []);\n\n        replace(expr.lemnRef, fragment);\n        fragment.lemnRef = expr.lemnRef;\n      }\n    }\n\n    maybeCall(expr.didRender, expr);\n}\n\n/**\n * Queue to call a component's render method later and inject its returned\n * value into the dom.\n *\n * @param {Component} component - rerender this component soon\n */\nfunction rerender (expr) {\n    return Promise.resolve(expr).then(performRender);\n}\n\n/**\n * Attach a component into some root node.\n *\n * @param {HTMLElement} root - html element to attach component under\n * @param {Component} component - component to render\n */\nfunction attach(root, expr) {\n    root.appendChild(h`${expr}`);\n    performRender(expr);\n    didAttach(expr);\n}\n\n/**\n * Detach a component from the dom.\n *\n * @param {Component} component - component to detach from parent dom\n */\nfunction detach(expr) {\n    willDetach(expr);\n    removeRef(expr.lemnRef);\n}\n\nexport {\n    toFragment,\n    maybeCall,\n    performRender,\n    rerender,\n    attach,\n    detach,\n};\n","import {rerender} from './lifecycle';\n\n/**\n * A function bonded a Model or other Bond parent. Changes are pushed from\n * parent to child. Using a Bond in a `h` tagged template string will\n * automatically rerender when its function returns a new value from its parent\n * Model or Bond.\n */\nclass Bond {\n  constructor (parent, fn) {\n    this.parent = parent;\n    this.lemnPrivateFn = fn;\n    this.data = this.lemnPrivateFn(this.parent.data, this.data);\n  }\n\n  unbind (child) {\n    if ((this.lemnPrivateActiveChildren = (this.lemnPrivateActiveChildren || []).filter(c => c !== child)).length === 0) {\n      this.parent.unbind(this);\n    }\n  }\n\n  bind (child) {\n    if ((this.lemnPrivateActiveChildren = [...(this.lemnPrivateActiveChildren || []), child]).length === 1) {\n      this.parent.bind(this);\n      this.data = this.lemnPrivateFn(this.parent.data, this.data);\n    }\n  }\n\n  push () {\n    if (this.data !== (this.data = this.lemnPrivateFn(this.parent.data, this.data))) {\n      (this.lemnPrivateActiveChildren || []).forEach(child => child.push());\n      if (this.lemnRef) {\n        rerender(this);\n      }\n    }\n  }\n\n  as (fn) {\n    return new Bond(this, fn);\n  }\n\n  willDetach () {\n    this.parent.unbind(this);\n  }\n\n  didAttach () {\n    this.parent.bind(this);\n  }\n\n  render () {\n    return this.data;\n  }\n}\n\nexport {\n  Bond,\n};\n","import {Bond} from './bond';\n\n/** A data model that pushes changes to bonded functions. */\nclass Model extends Bond {\n  constructor (data = {}) {\n    super({\n      bind () {},\n      unbind () {},\n      data\n    }, n => n);\n  }\n\n  set (data) {\n    this.parent.data = data;\n    this.push();\n  }\n\n  toJSON () {\n    return this.data;\n  }\n}\n\nexport {\n  Model,\n};\n","import {h, rerender, attach, Model, Store} from '..';\n\nconst store = new Store({\n  'todos/index': [],\n});\n\nclass ToDoItem {\n  constructor (id) {\n    this.id = id;\n    this.model = store.model(id);\n  }\n\n  render () {\n    const {model} = this;\n    return h`<div>\n    <input type=\"checkbox\"\n      checked=\"${model.as(({complete}) => complete)}\"\n      onchange=\"${ev => model.set({...model.data, complete: !model.data.complete})}\">\n      ${model.data.description}\n    </div>`;\n  }\n}\n\nclass ToDoSet {\n  constructor (id) {\n    this.id = id;\n    this.index = store.model(id);\n  }\n\n  render () {\n    return h`${this.index.as(ids => ids.map(id => new ToDoItem(id)))}`;\n  }\n}\n\nclass TextInput {\n  constructor (options = {name: 'name', model: new Model('')}) {\n    this.options = options;\n  }\n\n  render () {\n    const {name, model} = this.options;\n    return h`<input type=\"text\"\n      name=\"${name}\"\n      value=\"${model.as(i => i)}\"\n      onkeyup=\"${ev => model.set(ev.currentTarget.value)}\">`;\n  }\n}\n\nclass ToDoForm {\n  constructor () {\n    this.nextId = 0;\n    this.submit = this.submit.bind(this);\n    this.descriptionModel = new Model('');\n  }\n\n  submit (ev) {\n    const id = this.nextId++;\n\n    store.set(`todos/${id}`, {\n      complete: false,\n      description: this.descriptionModel.data,\n    });\n    this.descriptionModel.set('');\n\n    store.set('todos/index', [\n      ...(store.get('todos/index') || []),\n      `todos/${id}`\n    ]);\n\n    ev.preventDefault();\n    return false;\n  }\n\n  render () {\n    return h`<form onsubmit=\"${this.submit}\">\n      ${new TextInput({name: 'description', model: this.descriptionModel})}\n      <input type=\"button\" value=\"add\" onclick=\"${this.submit}\">\n    </form>`;\n  }\n}\n\nclass App {\n  render () {\n    const todosIndex = store.model('todos/index');\n    const clearComplete = () => todosIndex.set(\n      todosIndex.data.filter(id => !store.get(id).complete)\n    );\n    return h`\n      <input type=\"button\" value=\"clear complete\" onclick=\"${clearComplete}\">\n      ${new ToDoForm()}\n      ${new ToDoSet('todos/index')}\n    `;\n  }\n}\n\nattach(document.querySelector('.root'), new App);\n","import {Model} from './model';\n\n/** A store for multiple Models to utilize them in multiple components. */\nclass Store {\n  constructor (lemnData = {}) {\n    Object.entries(lemnData).forEach(args => this.set(...args));\n  }\n\n  model (id) {\n    return ((this.lemnPrivateData = this.lemnPrivateData || {})[id] = this.lemnPrivateData[id] || new Model());\n  }\n\n  get (id) {\n    return ((this.lemnPrivateData = this.lemnPrivateData || {})[id] = this.lemnPrivateData[id] || new Model()).data;\n  }\n\n  set (id, lemnData) {\n    ((this.lemnPrivateData = this.lemnPrivateData || {})[id] = this.lemnPrivateData[id] || new Model()).set(lemnData);\n  }\n\n  remove (id) {\n    delete this.lemnPrivateData[id];\n  }\n\n  toJSON () {\n    return this.lemnPrivateData;\n  }\n}\n\nexport {\n  Store,\n};\n"],"sourceRoot":""}